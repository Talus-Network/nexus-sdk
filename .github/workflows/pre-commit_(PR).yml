name: Pre-commit hook (PR)
on:
  pull_request:

# Fix for OOM.
env:
  RUST_CACHE_VERBOSE: true
  CARGO_BUILD_JOBS: 1
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: >
    -C codegen-units=1

jobs:
  run-pre-commit:
    name: Run pre-commit hook (PR branch)
    runs-on: ubuntu-latest
    steps:
      - name: Get architecture
        id: get-arch
        run: echo "ARCH=$(uname -m)" >> $GITHUB_OUTPUT

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Compute cache keys
        id: cache-keys
        run: |
          # `main` branch cache keys
          echo "MAIN_CACHE_KEY=v7-${{ runner.os }}-${{ steps.get-arch.outputs.ARCH }}-main-${{ hashFiles('**/Cargo.lock') }}" >> $GITHUB_OUTPUT
          echo "MAIN_CACHE_RESTORE_KEY=v7-${{ runner.os }}-${{ steps.get-arch.outputs.ARCH }}-main-" >> $GITHUB_OUTPUT
          ## Older key -- Delete once this PR is in main and the cache is updated according to MAIN_CACHE_KEY
          echo "MAIN_CACHE_RESTORE_KEY0=v6-${{ runner.os }}-${{ steps.get-arch.outputs.ARCH }}-" >> $GITHUB_OUTPUT
          # `pr` branch cache keys
          echo "PR_CACHE_KEY=v7-${{ runner.os }}-${{ steps.get-arch.outputs.ARCH }}-PR-${{ hashFiles('**/Cargo.lock') }}" >> $GITHUB_OUTPUT
          echo "PR_CACHE_RESTORE_KEY=v7-${{ runner.os }}-${{ steps.get-arch.outputs.ARCH }}-PR-" >> $GITHUB_OUTPUT
          ## Older key -- Delete once this PR is in main and the cache is updated according to PR_CACHE_KEY
          echo "PR_CACHE_RESTORE_KEY0=v6-${{ runner.os }}-${{ steps.get-arch.outputs.ARCH }}-" >> $GITHUB_OUTPUT

      # Restoring the PR cache takes into account:
      #
      #   1. The PR cache itself, which is used to speed up the PR development cycle.
      #   2. In case the above is missing, the main branch cache, which is used to bootstrap the PR cache.
      - name: Restore cache (PR)
        id: cache-restore
        uses: actions/cache/restore@v4.2.3
        with:
          key: ${{ steps.cache-keys.outputs.PR_CACHE_KEY }}
          restore-keys: |
            ${{ steps.cache-keys.outputs.PR_CACHE_RESTORE_KEY }}
            ${{ steps.cache-keys.outputs.MAIN_CACHE_RESTORE_KEY }}
            ${{ steps.cache-keys.outputs.PR_CACHE_RESTORE_KEY0 }}
            ${{ steps.cache-keys.outputs.MAIN_CACHE_RESTORE_KEY0 }}

          path: |
            ~/.cache/sccache
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/work/**/target

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1.13.0
        with:
          toolchain: nightly-2025-01-06, stable
          override: true
          components: rustfmt, clippy
          cache: 'false'

      - name: Install Rust tools
        uses: taiki-e/install-action@v2.57.8
        with:
          tool: cargo-binstall,just,cargo-nextest,typos

      - name: Install NPM stuff from helpers/npm-install-g.txt
        run: ./helpers/npm-install-g.sh

      # Here it is ...
      - name: Run pre-commit hook
        run: ./.pre-commit/pre-commit

      - name: Save cache (PR)
        uses: actions/cache/save@v4.2.3
        if: ${{ always() }}
        with:
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
          path: |
            ~/.cache/sccache
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/work/**/target
